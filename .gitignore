# ================================
# PYTHON PATTERNS
# ================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
.env.local
.env.*.local

# ================================
# IDE PATTERNS
# ================================

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# VS Code
.vscode/
*.code-workspace

# Local History for Visual Studio Code
.history/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# ================================
# OPERATING SYSTEM PATTERNS
# ================================

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ================================
# LOGS AND TEMPORARY FILES
# ================================

# All log files
*.log
*.log.*
*.logs
logs/
log/

# Wagehood-specific log files
wagehood_*.log
wagehood*.log
installation.log
trading.log
backtest.log
analysis.log
data_ingestion.log
realtime.log
signal_engine.log
performance.log
debug.log
error.log
access.log
audit.log

# Application-specific logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Process ID files
*.pid
*.lock
*.pidfile

# Backup files
*.bak
*.backup
*.old
*.orig
*.swp
*.swo

# Temporary files
tmp/
temp/
*.tmp
*.temp
.temp/
.tmp/
*_temp*
*_tmp*

# ================================
# TEST OUTPUTS AND REPORTS
# ================================

# Test result files
test_results/
test_output/
test_reports/
test-reports/
results/
reports/

# Test report files
*_report.json
*_report.html
*_report.xml
*_report.txt
*_report.md
*report*.json
*report*.html
*report*.xml
*report*.txt
*report*.md

# Paper trading reports
paper_trading_*.json
paper_trading_*.md
paper_trading_*.html

# Performance test outputs
benchmark_*.json
benchmark_*.md
performance_*.json
performance_*.md

# Coverage reports
coverage_*.json
coverage_*.xml
coverage_*.html

# ================================
# CACHE DIRECTORIES
# ================================

# Python cache directories
.cache/
.pytest_cache/
.mypy_cache/
.ruff_cache/
.coverage_cache/

# Build cache
.build_cache/
build_cache/

# Application cache
cache/
.cache/
*_cache/
*.cache

# ================================
# DATABASE AND STORAGE
# ================================

# Database files
*.db
*.sqlite
*.sqlite3
*.sqlite-journal

# Redis dump files
dump.rdb
*.rdb

# Data storage
data/
*.data
*.dat

# ================================
# WAGEHOOD-SPECIFIC PATTERNS
# ================================

# Wagehood local development files
.local/

# Configuration files with sensitive data
config.py
config.ini
settings.py
settings.ini
*_secret*
*_private*
api_keys.py

# Trading data
backtest_data/
market_data/
trading_data/
historical_data/

# Analysis outputs
analysis_output/
strategy_output/
indicator_output/

# Demo and testing scripts (if they contain sensitive data)
demo_*.py
test_*.py
debug_*.py
validate_*.py
populate_*.py
monitor_*.py
comprehensive_*.py

# ================================
# DOCKER AND DEPLOYMENT
# ================================

# Docker volumes
volumes/
docker-volumes/

# Deployment files
deploy/
deployment/

# Service files
*.service

# ================================
# SECURITY - NEVER COMMIT THESE
# ================================

# SSL certificates and keys
*.pem
*.key
*.cert
*.crt
*.p12
*.pfx

# Environment files
.env
.env.*
!.env.example

# Secrets and credentials
secrets/
credentials/
*.credentials
*.secret
*.secrets
secrets.json
credentials.json
firebase-adminsdk*.json
service-account*.json
client_secret*.json

# ================================
# DOCUMENTATION BUILD
# ================================

# mkdocs documentation
/site

# Sphinx documentation
docs/_build/

# ================================
# TYPE CHECKING
# ================================

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/
